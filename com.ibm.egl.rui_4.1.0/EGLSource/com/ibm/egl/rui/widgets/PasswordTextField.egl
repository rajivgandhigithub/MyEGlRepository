/*
 * Licensed Materials - Property of IBM
 *
 * Copyright IBM Corporation 2008, 2011. All Rights Reserved.
 *
 * U.S. Government Users Restricted Rights - Use, duplication or
 * disclosure restricted by GSA DP Schedule Contract with IBM Corp.
 */
package com.ibm.egl.rui.widgets;

handler PasswordTextField type RUIWidget {tagName="input type=password", onConstructionFunction = start, cssFile = "css/com.ibm.egl.rui_4.1.0.css",
	@VEWidget{
		category = "Display and Input",
		template = "${typeName}{}",
		smallIcon = "icons/ctool16/passwordtextfield.gif",
		largeIcon = "icons/ctool24/passwordtextfield.gif"
	},
	@VEDataTemplate{
		dataTemplates = [
			@DataTemplate{
				name = "PasswordTextField",
				dataMapping = @DataMapping {
					forArray = false,
					mappings = [MappingKind.TYPE_PRIMITIVE_STRING]
				},
				purposes = [PurposeKind.FOR_CREATE, PurposeKind.FOR_UPDATE],
				template = "${widgetName} ${typeName:com.ibm.egl.rui.widgets.PasswordTextField} {};"
			},
			@DataTemplate{
				name = "PasswordTextField (read only)",
				dataMapping = @DataMapping {
					forArray = false,
					mappings = [MappingKind.TYPE_PRIMITIVE_STRING]
				},
				purposes = [PurposeKind.FOR_DISPLAY, PurposeKind.FOR_UPDATE],
				template = "${widgetName} ${typeName:com.ibm.egl.rui.widgets.PasswordTextField} {readOnly = true};"
			}
		]
	}}
	maxLength int { @EGLProperty {}, @VEProperty{}};
	text String { @EGLProperty { getMethod=getText, setMethod=setText }, @VEProperty{} };
	readOnly boolean {@EGLProperty {getMethod=getReadOnly, setMethod=setReadOnly}, @VEProperty{}};
	error boolean = false;
	
	private savedEnableSelection boolean;
	private savedBackgroundColor string;

	function start()
		onFocusGained ::= enableSelection;
		onFocusLost ::= disableSelection;
	end
	
	private function enableSelection(e Event in)
		savedEnableSelection = RUILib.getTextSelectionEnabled();
		RUILib.setTextSelectionEnabled(true);
	end
	
	private function disableSelection(e Event in)
		RUILib.setTextSelectionEnabled(savedEnableSelection);
	end
		
	private function getReadOnly() returns(boolean)
		return(readOnly);
	end
	
	private function setReadOnly(ro boolean in)
		readOnly = ro;
		if(readOnly)
			setAttribute("readOnly", "true");
			savedBackgroundColor = backgroundColor;
			backgroundColor = null;
			this.class = "EglRuiPasswordTextFieldReadOnly";
		else
			removeAttribute("readOnly");			
			backgroundColor = savedBackgroundColor;
			this.class = "EglRuiPasswordTextField";
		end
	end

	private function setText(text string in)
		setAttribute("value", text);
	end
	
	private function getText() returns (string)
		return ( getAttribute("value") as string );
	end
	
	function getWidgetOrientation() returns (String) { @Override }
		return ( getAttribute("dir") as string );
	end
	
	function setWidgetOrientation(widgetOrientation String in) { @Override }
		if (widgetOrientation == "RTL")
			setAttribute("dir", "rtl");
		else
			setAttribute("align", "ltr");				
		end		
	end	
	
	private function getMaxLength() returns (int)
		return (getAttribute("maxLength") as int);
	end
	
	private function setMaxLength(maxLength int in)
		setAttribute("maxLength", maxLength as String);
	end
end
