/*
 * Licensed Materials - Property of IBM
 *
 * Copyright IBM Corporation 2008, 2011. All Rights Reserved.
 *
 * U.S. Government Users Restricted Rights - Use, duplication or
 * disclosure restricted by GSA DP Schedule Contract with IBM Corp.
 */
package com.ibm.egl.rui.mvc;

import com.ibm.egl.rui.widgets.Box;
import com.ibm.egl.rui.widgets.TextLabel;
import egl.ui.rui.Widget;

record FormField
	displayName String?;
	controller Controller;
	nameLabel TextLabel;
	errorLabel TextLabel;
	labelClass String?;
end

handler ValidatingForm type RUIWidget {tagName = "div"}

	entries FormField[] { @EGLProperty { setMethod=setEntries, getMethod=getEntries } };
	box Box { columns=3 };

	function setEntries(entries FormField[] in)
		this.entries = entries;
		for (n int from 1 to entries.getSize() by 1)
			this.entries[n].nameLabel = new TextLabel { text=entries[n].displayName };
			this.entries[n].labelClass = entries[n].nameLabel.class;
			box.appendChild(this.entries[n].nameLabel);
			box.appendChild(this.entries[n].controller.view);
			this.entries[n].errorLabel = new TextLabel { marginLeft=9, class="EglRuiTextLabel FormErrorLabel" };
			box.appendChild(this.entries[n].errorLabel);
			if (this.entries[n].controller.validStateSetter == null)
				this.entries[n].controller.validStateSetter = validStateSetter;
			end
		end
		appendChild(box);
	end
	
	function getEntries() returns(FormField[])
		return (entries);
	end		
	
	function commit()
		for (n int from entries.getSize() to 1 decrement by 1)
			entries[n].controller.commit();
			msg String = entries[n].controller.getErrorMessage();
			if (!(msg == null || msg == ""))
				entries[n].errorLabel.text = msg;
			end
		end
	end
	
	function publish()
		for (n int from entries.getSize() to 1 decrement by 1)
			entries[n].controller.publish();
		end		 
	end
	
	function isValid() returns(boolean)
		result boolean = true;
		for (n int from entries.getSize() to 1 decrement by 1)
			if (!entries[n].controller.isValid())
				result = false;				
			end
		end		
		return(result);
	end
	
	function validStateSetter(view Widget in, valid boolean in)
		for (n int from entries.getSize() to 1 decrement by 1)
			entry FormField = entries[n];
			msg String? = entry.controller.getErrorMessage();
			entry.errorLabel.text = msg;
			setValidState(entry, view, valid);
		end
	end
	
	function setValidState(entry FormField, view Widget in, valid boolean in)
		if (entry.controller.view == view)
			if (valid)
				entry.nameLabel.class = entry.labelClass;
			else
				entry.nameLabel.class = entry.labelClass + " FormErrorLabel";
			end
		end
	end
end
